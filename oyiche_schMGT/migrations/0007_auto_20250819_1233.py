# Generated by Django 5.2.5 on 2025-08-19 12:33

from django.db import migrations, models
import uuid

def populate_uuid_fields(apps, schema_editor):

    SchoolType = apps.get_model("oyiche_schMGT", "SchoolType")
    for obj in SchoolType.objects.all():
        obj.sch_type_id = uuid.uuid4()
        obj.save(update_fields=["sch_type_id"])

    SchoolCategory = apps.get_model("oyiche_schMGT", "SchoolCategory")
    for obj in SchoolCategory.objects.all():
        obj.sch_category_id = uuid.uuid4()
        obj.save(update_fields=["sch_category_id"])

    AcademicSession = apps.get_model("oyiche_schMGT", "AcademicSession")
    for obj in AcademicSession.objects.all():
        obj.academic_session_id = uuid.uuid4()
        obj.save(update_fields=["academic_session_id"])

    AcademicStatus = apps.get_model("oyiche_schMGT", "AcademicStatus")
    for obj in AcademicStatus.objects.all():
        obj.academic_status_id = uuid.uuid4()
        obj.save(update_fields=["academic_status_id"])

    GeneralAcademicTerm = apps.get_model("oyiche_schMGT", "GeneralAcademicTerm")
    for obj in GeneralAcademicTerm.objects.all():
        obj.general_academic_term_id = uuid.uuid4()
        obj.save(update_fields=["general_academic_term_id"])

    AcademicTerm = apps.get_model("oyiche_schMGT", "AcademicTerm")
    for obj in AcademicTerm.objects.all():
        obj.academic_term_id = uuid.uuid4()
        obj.save(update_fields=["academic_term_id"])

    Gender = apps.get_model("oyiche_schMGT", "Gender")
    for obj in Gender.objects.all():
        obj.gender_id = uuid.uuid4()
        obj.save(update_fields=["gender_id"])

    SchoolClasses = apps.get_model("oyiche_schMGT", "SchoolClasses")
    for obj in SchoolClasses.objects.all():
        obj.class_id = uuid.uuid4()
        obj.save(update_fields=["class_id"])

    SchoolSubject = apps.get_model("oyiche_schMGT", "SchoolSubject")
    for obj in SchoolSubject.objects.all():
        obj.sch_subject_id = uuid.uuid4()
        obj.save(update_fields=["sch_subject_id"])

    SchoolClassSubjects = apps.get_model("oyiche_schMGT", "SchoolClassSubjects")
    for obj in SchoolClassSubjects.objects.all():
        obj.sch_class_subject_id = uuid.uuid4()
        obj.save(update_fields=["sch_class_subject_id"])

    SchoolGrades = apps.get_model("oyiche_schMGT", "SchoolGrades")
    for obj in SchoolGrades.objects.all():
        obj.sch_grade_id = uuid.uuid4()
        obj.save(update_fields=["sch_grade_id"])

    StudentScores = apps.get_model("oyiche_schMGT", "StudentScores")
    for obj in StudentScores.objects.all():
        obj.student_score_id = uuid.uuid4()
        obj.save(update_fields=["student_score_id"])

    StudentPerformance = apps.get_model("oyiche_schMGT", "StudentPerformance")
    for obj in StudentPerformance.objects.all():
        obj.performance_id = uuid.uuid4()
        obj.save(update_fields=["performance_id"])

    SchoolRemark = apps.get_model("oyiche_schMGT", "SchoolRemark")
    for obj in SchoolRemark.objects.all():
        obj.sch_remark_id = uuid.uuid4()
        obj.save(update_fields=["sch_remark_id"])

class Migration(migrations.Migration):
    atomic = True

    dependencies = [
        ('oyiche_schMGT', '0006_academicsession_academic_session_id_and_more'),
    ]

    operations = [
        migrations.RunPython(populate_uuid_fields),
    ]
